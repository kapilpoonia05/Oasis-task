# -*- coding: utf-8 -*-
"""irisflower_1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1u0tQXL7HbHcw353oK1fD5-GUND_lBvC3
"""

import numpy as np
import pandas as pd
import os

url='https://raw.githubusercontent.com/kapilpoonia05/Oasis-task/main/Iris%20Flower%20Classification/Iris%20(1).csv'

# Read the Iris.csv file into a pandas DataFrame
df = pd.read_csv(url)

df.head()

df.drop('Id',axis=1,inplace=True)

df.head(10)

df.shape

df.info()

df.isnull().sum()

df.describe()

import matplotlib.pyplot as plt

plt.hist(df['SepalLengthCm'])

plt.hist(df['SepalWidthCm'])

df.hist(figsize=(15,10))

import seaborn as sns
from sklearn.model_selection import train_test_split

df['Species'].value_counts()

# scatter plot
colors = ['green','red','blue']
species = ['Iris-setosa','Iris-versicolor','Iris-virginica']

for i in range(3):
    x=df[df['Species']==species[i]]
    plt.scatter(x['SepalLengthCm'],x['SepalWidthCm'], c=colors[i], label=species[i])
plt.xlabel("Sepal Length")
plt.ylabel("Sepal Width")
plt.legend()

for i in range(3):
    x=df[df['Species']==species[i]]
    plt.scatter(x['SepalLengthCm'],x['PetalLengthCm'], c=colors[i], label=species[i])
plt.xlabel("Sepal Length")
plt.ylabel("Petal Length")
plt.legend()

for i in range(3):
    x=df[df['Species']==species[i]]
    plt.scatter(x['SepalWidthCm'],x['PetalWidthCm'], c=colors[i], label=species[i])
plt.xlabel("Sepal Width")
plt.ylabel("Petal Width")
plt.legend()

for i in range(3):
    x=df[df['Species']==species[i]]
    plt.scatter(x['PetalLengthCm'],x['PetalWidthCm'], c=colors[i], label=species[i])
plt.xlabel("Petal Length")
plt.ylabel("Petal Width")
plt.legend()

#correaltion Matrix
numeric_columns = df.select_dtypes(include=["number"]).columns
df_numeric = df[numeric_columns]
df_numeric.corr()

import seaborn as sns

#Heatmap
cor=df_numeric.corr()
sns.heatmap(cor,annot=True)

df['Species'].value_counts()

#REplacing object values with some integer values
species = ['Iris-setosa','Iris-versicolor','Iris-virginica']
for i in range (0,3):
  df['Species'].replace({species[i]:i},inplace=True)

df.head()

#Splitting the dataset
X = df.drop(columns='Species')
Y=df['Species']

X

Y

from sklearn.model_selection import train_test_split

X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size=0.2,random_state=42)

print(X.shape,X_test.shape,X_train.shape);

X_test

X_train

Y_test

Y_train

#Logistic Regression
from sklearn.linear_model import LinearRegression
model = LinearRegression()

model.fit(X_train,Y_train)

accuracy = model.score(X_test, Y_test)*100
print("Accuracy:", accuracy)

#KNN - K-Nearest Neighbour
from sklearn.neighbors import KNeighborsClassifier
model=KNeighborsClassifier()

model.fit(X_train,Y_train)

accuracy = model.score(X_test, Y_test)*100
print("Accuracy:", accuracy)

#Decision Tree Classifier
from sklearn.tree import DecisionTreeClassifier
model=DecisionTreeClassifier()

model.fit(X_train,Y_train)

accuracy = model.score(X_test, Y_test)*100
print("Accuracy:", accuracy)